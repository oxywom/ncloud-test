{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css'; // import '../css/index.css';\n\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\nimport moment from 'moment'; // import { useSelector } from 'react/redux';\n\nimport logo from '../../public/nouser.png'; // import useInput from '../../hooks/useInput';\n\nimport { useDispatch, useSelector } from 'react-redux'; // import { ADD_COMMENT_REQUEST } from '../../reducers/post';\n// import { post } from '../../../back/routes/post';\n\nvar TextArea = Input.TextArea;\n\nvar CommentList = function CommentList(_ref) {\n  var comments = _ref.comments;\n  return __jsx(List, {\n    dataSource: comments,\n    header: \"\".concat(comments.length, \"\\uAC1C\\uC758 \\uB2F5\\uBCC0\"),\n    itemLayout: \"horizontal\",\n    renderItem: function renderItem(props) {\n      return __jsx(Comment, props);\n    },\n    style: {\n      maxHeight: '250px',\n      overflow: 'auto',\n      height: '50vh'\n    }\n  });\n}; // const onSubmitComment = useCallback(() => {\n//   dispatch({\n//     type: ADD_COMMENT_REQUEST,\n//     data: { content: value, postId: props.postId, userId: me.id },\n//   });\n// }, [content, id]);\n\n\nvar Editor = function Editor(_ref2) {\n  var onChange = _ref2.onChange,\n      onSubmit = _ref2.onSubmit,\n      submitting = _ref2.submitting,\n      value = _ref2.value;\n  return __jsx(Form, null, __jsx(Form.Item, null, __jsx(TextArea, {\n    rows: 4,\n    onChange: onChange,\n    value: value\n  })), __jsx(Form.Item, null, __jsx(Button, {\n    htmlType: \"submit\",\n    loading: submitting,\n    onClick: onSubmit,\n    type: \"primary\"\n  }, \"\\uB313\\uAE00\")));\n};\n\nfunction Reply() {\n  var _useState = useState([]),\n      comments = _useState[0],\n      setComments = _useState[1];\n\n  var _useState2 = useState(false),\n      submitting = _useState2[0],\n      setSubmitting = _useState2[1];\n\n  var _useState3 = useState(''),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit() {\n    if (!value) {\n      return;\n    }\n\n    setSubmitting(true);\n    setTimeout(function () {\n      setSubmitting(false);\n      setValue('');\n      setComments([].concat(_toConsumableArray(comments), [{\n        author: me.nickname,\n        avatar: logo,\n        content: __jsx(\"p\", null, value),\n        datetime: moment().fromNow()\n      }]));\n    }, 500);\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return __jsx(\"div\", {\n    o: true\n  }, __jsx(\"br\", null), comments.length > 0 && __jsx(CommentList, {\n    comments: comments\n  }), __jsx(Comment, {\n    avatar: __jsx(Avatar, {\n      src: logo,\n      alt: \"logo\"\n    }),\n    content: __jsx(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value\n    })\n  }));\n}\n\nexport default Reply;","map":null,"metadata":{},"sourceType":"module"}