{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport DaumPostcode from 'react-daum-postcode';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UPDATE_LOCAL } from \"../reducers/user\";\n\nconst SearchLocation = () => {\n  const dispatch = useDispatch();\n  const {\n    location\n  } = useSelector(state => state.user);\n  const {\n    0: address,\n    1: setAddress\n  } = useState(\"\");\n  const handleComplete = useCallback(data => {\n    let fullAddress = data.address;\n    let extraAddress = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n    }\n\n    const finalAddress = fullAddress.split(\"(\")[0];\n    setAddress(finalAddress); // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\n  }, [address]);\n  useEffect(() => {\n    if (address !== \"\") {\n      dispatch({\n        type: UPDATE_LOCAL,\n        data: address\n      });\n    }\n  }, [address]);\n  return __jsx(React.Fragment, null, __jsx(DaumPostcode, {\n    onComplete: handleComplete,\n    adress: address\n  }), __jsx(\"h2\", null, location));\n};\n\nexport default SearchLocation;","map":null,"metadata":{},"sourceType":"module"}