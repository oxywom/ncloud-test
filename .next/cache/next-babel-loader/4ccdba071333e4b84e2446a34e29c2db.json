{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_O_RECIEVE_POST_REQUEST, LOAD_POST_REQUEST, UPDATE_BOARD, UPDATE_TAG } from '../reducers/post';\nimport { Button } from \"antd\";\nimport Tags from \"../components/Tags\";\nimport PostCard1 from \"../components/PostCard1\";\nimport Layout from \"../components/Layout\";\nimport PostCard2 from \"../components/PostCard2\";\nimport styled from \"styled-components\";\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport a1 from \"../components/광고1.jpeg\";\nimport a2 from \"../components/광고2.jpg\";\nimport a3 from \"../components/광고3.jpg\";\nimport a4 from \"../components/광고4.jpeg\";\nimport a5 from \"../components/광고5.jpg\";\nconst PostCarDiv2 = styled.div.withConfig({\n  displayName: \"objectreceive__PostCarDiv2\",\n  componentId: \"sc-1kngk9z-0\"\n})([\"width:100%;display:flex;flex-wrap:wrap;justify-content:center;\"]);\nconst AdvertisementDiv = styled.div.withConfig({\n  displayName: \"objectreceive__AdvertisementDiv\",\n  componentId: \"sc-1kngk9z-1\"\n})([\"width:950px;height:297px;position:relative;min-width:950px;\"]);\n\nfunction Objectreceive() {\n  const dispatch = useDispatch();\n  const {\n    me,\n    location\n  } = useSelector(state => state.user);\n  const {\n    selectedTag,\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    id,\n    object_TagsData\n  } = useSelector(state => state.post);\n  const {\n    0: view,\n    1: setView\n  } = useState(true);\n  const onSwitch = useCallback(() => {\n    setView(!view);\n  }, [view]);\n  const advImg = [{\n    src: a1\n  }, {\n    src: a2\n  }, {\n    src: a3\n  }, {\n    src: a4\n  }, {\n    src: a5\n  }];\n  const {\n    0: i,\n    1: Seti\n  } = useState(0);\n  const {\n    0: imgSrc,\n    1: SetImgSrc\n  } = useState(a1);\n\n  const RchangeImg = () => {\n    if (i < 5) {\n      Seti(i + 1);\n      SetImgSrc(advImg[i].src);\n    } else if (i === 5) {\n      Seti(0);\n    }\n  };\n\n  const LchangImg = () => {\n    if (i > 0) {\n      Seti(i - 1);\n      SetImgSrc(advImg[i - 1].src);\n      console.log(imgSrc);\n    }\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: UPDATE_TAG,\n      data: \"전체\"\n    });\n    dispatch({\n      type: UPDATE_BOARD,\n      data: 1\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST,\n      data: \"전체\",\n      boardNum: 1,\n      location: location\n    });\n  }, [location]);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n          console.log(selectedTag);\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: selectedTag,\n            boardNum: 1,\n            lastId: lastId,\n            location: location\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, selectedTag, location]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uBB3C\\uAC74\\uC744 \\uBE4C\\uB824\\uC918 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), view ? __jsx(Layout, null, __jsx(AdvertisementDiv, null, __jsx(\"img\", {\n    src: imgSrc,\n    width: \"100%\",\n    height: \"100%\"\n  }), __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"130px\",\n      width: \"50px\"\n    },\n    onClick: LchangImg\n  }, __jsx(LeftOutlined, {\n    style: {\n      fontSize: \"25px\",\n      color: \"gray\"\n    }\n  })), __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"130px\",\n      left: \"900px\",\n      width: \"50px\"\n    },\n    onClick: RchangeImg\n  }, __jsx(RightOutlined, {\n    style: {\n      fontSize: \"25px\",\n      color: \"gray\"\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1\n  }), __jsx(Button, {\n    onClick: onSwitch\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\")), mainPosts.map(post => __jsx(PostCard1, {\n    key: post.id,\n    post: post\n  }))) : __jsx(Layout, null, __jsx(AdvertisementDiv, null, __jsx(\"img\", {\n    src: imgSrc,\n    width: \"100%\",\n    height: \"100%\"\n  }), __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"130px\",\n      width: \"50px\"\n    },\n    onClick: LchangImg\n  }, __jsx(LeftOutlined, {\n    style: {\n      fontSize: \"25px\",\n      color: \"gray\"\n    }\n  })), __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"130px\",\n      left: \"900px\",\n      width: \"50px\"\n    },\n    onClick: RchangeImg\n  }, __jsx(RightOutlined, {\n    style: {\n      fontSize: \"25px\",\n      color: \"gray\"\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1\n  }), __jsx(Button, {\n    onClick: onSwitch\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\")), __jsx(PostCarDiv2, null, mainPosts.map(post => __jsx(PostCard2, {\n    key: post.id,\n    post: post\n  })))));\n}\n\nexport default Objectreceive;","map":null,"metadata":{},"sourceType":"module"}