{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Tag, Button } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_SCHANGE_TAG_REQUEST, UPDATE_CHANGE_TAG_REQUEST, LOAD_POST_REQUEST, UPDATE_TAG, LOAD_SEARCH_POSTS_REQUEST } from \"../reducers/post\";\n\nfunction Tags(_ref) {\n  var tagsData = _ref.tagsData,\n      boardNum = _ref.boardNum,\n      select = _ref.select,\n      search = _ref.search;\n  var CheckableTag = Tag.CheckableTag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      location = _useSelector.location;\n\n  var _useState = useState([]),\n      selectedTags = _useState[0],\n      setSelectedTags = _useState[1];\n\n  var handleChange = useCallback(function (tag, checked) {\n    var nextSelectedTags = checked ? [tag] : selectedTags.filter(function (t) {\n      return t !== tag;\n    });\n    setSelectedTags(_toConsumableArray(nextSelectedTags));\n    dispatch({\n      type: UPDATE_CHANGE_TAG_REQUEST,\n      data: nextSelectedTags[0],\n      // 현재 선택한 태그명\n      boardNum: boardNum // 현재 렌더링중인 게시판 고유번호\n\n    });\n    dispatch({\n      type: UPDATE_TAG,\n      data: nextSelectedTags[0] // 전역적으로 현재 선택한 태그를 공유한다.\n\n    });\n    console.log(search);\n    dispatch({\n      // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\n      type: LOAD_SCHANGE_TAG_REQUEST,\n      location: location,\n      select: select,\n      searchword: search,\n      boardNum: boardNum,\n      tag: nextSelectedTags[0] // boardNum 게시판의 select 요소를 기준으로 searchword 와 관련된 local 지역의 데이터를 가져온다.\n\n    });\n    console.log('You are interested in: ', nextSelectedTags);\n    console.log('You are interested in: ', nextSelectedTags[0]);\n  }, [selectedTags]);\n  useEffect(function () {\n    setSelectedTags(['전체']);\n  }, []);\n  return __jsx(React.Fragment, null, tagsData.map(function (tag) {\n    return __jsx(CheckableTag, {\n      key: tag,\n      checked: selectedTags.indexOf(tag) > -1,\n      onChange: function onChange(checked) {\n        return handleChange(tag, checked);\n      }\n    }, tag);\n  }));\n}\n\nexport default Tags;","map":null,"metadata":{},"sourceType":"module"}