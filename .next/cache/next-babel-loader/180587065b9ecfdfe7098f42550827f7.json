{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport wrapper from '../store/configureStore';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, logoutRequestAction, UPDATE_LOCAL } from '../reducers/user';\nimport { LOAD_POST_REQUEST, TEST, UPDATE_BOARD, UPDATE_TAG } from '../reducers/post';\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Write from \"./write\";\nconst PostCarDiv2 = styled.div.withConfig({\n  displayName: \"home__PostCarDiv2\",\n  componentId: \"sc-hpssxr-0\"\n})([\"width:100%;display:flex;flex-wrap:wrap;\"]);\n\nfunction SSRPAGE() {\n  const dispatch = useDispatch();\n  const {\n    me,\n    location\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    reTweetError,\n    id,\n    object_TagsData,\n    selectedTag\n  } = useSelector(state => state.post);\n  const {\n    0: view,\n    1: setView\n  } = useState(true);\n  const onSwitch = useCallback(() => {\n    setView(!view);\n  }, [view]);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n  }, []); // useEffect(()=>{\n  //   if(location === null)\n  //   dispatch({\n  //     type:UPDATE_LOCAL,\n  //     data:me.location,\n  //   })\n  // },[me]);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: selectedTag,\n            boardNum: 1,\n            lastId: lastId\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n  return __jsx(\"div\", null, __jsx(Write, null));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: UPDATE_TAG,\n    data: \"전체\"\n  });\n  context.store.dispatch({\n    type: UPDATE_BOARD,\n    data: 1\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: \"전체\",\n    boardNum: 1\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default SSRPAGE;","map":null,"metadata":{},"sourceType":"module"}