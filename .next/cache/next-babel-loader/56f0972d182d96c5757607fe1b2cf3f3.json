{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { Button, Checkbox, Form, Input } from 'antd';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST, UPDATE_LOCAL } from '../reducers/user';\nimport Layout from \"../components/Layout\";\nimport SearchLocation from \"../components/SearchLocation\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Swal from 'sweetalert2';\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-9m0k6v-0\"\n})([\"color:red\"]);\n\nfunction Signup() {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me,\n    location\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: password2,\n    1: setPassword2\n  } = useState('');\n  const {\n    0: password2Error,\n    1: setPassword2Error\n  } = useState(false);\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const {\n    0: place,\n    1: SetPlace\n  } = useState(false);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.push('/objectreceive');\n    }\n  }, [signUpDone]); // signup완료시 signUpDone값의 변화를 체크하여 메인페이지로\n\n  useEffect(() => {\n    if (signUpError) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: signUpError\n      });\n    }\n  }, [signUpError]); // signUpError가 날경우 signUpError값의 변화를 체크하여 에러경고 발생\n\n  const onChangePassword2 = useCallback(e => {\n    setPassword2(e.target.value);\n    setPassword2Error(e.target.value !== password);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, [term]);\n  const onSubmit = useCallback(() => {\n    if (password !== password2) return setPassword2Error(true);\n    if (!term) return setTermError(true);\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname,\n        location\n      }\n    });\n    Router.push('/objectreceive'); // 임시로 완료된거로 치고 메인으로 돌려보낸다\n  }, [email, password, password2, term, location]);\n\n  const placeHandle = () => {\n    SetPlace(true);\n  };\n\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), __jsx(Form, {\n    onFinish: onSubmit\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    onChange: onChangeNickname,\n    required: true\n  })), __jsx(\"div\", {\n    onClick: placeHandle,\n    style: {\n      paddingTop: \"20px\",\n      paddingBottom: \"20px\"\n    }\n  }, place ? __jsx(SearchLocation, null) : __jsx(\"div\", {\n    style: {\n      width: \"200px\",\n      height: \"30px\",\n      border: \"solid #d9d9d9\",\n      textAlign: \"center\"\n    }\n  }, \"\\uC9C0\\uC5ED \\uAC80\\uC0C9  \", __jsx(SearchOutlined, null))), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password2\",\n    type: \"password\",\n    value: password2,\n    onChange: onChangePassword2,\n    required: true\n  }), password2Error && __jsx(ErrorMessage, null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\\uC758 \\uC774\\uC6A9\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(ErrorMessage, null, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n}\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}