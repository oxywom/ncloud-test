{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css'; // import '../css/index.css';\n\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\nimport moment from 'moment'; // import { useSelector } from 'react/redux';\n\nimport logo from '../../public/nouser.png'; // import useInput from '../../hooks/useInput';\n\nimport { useDispatch, useSelector } from 'react-redux'; // import { ADD_COMMENT_REQUEST } from '../../reducers/post';\n// import { post } from '../../../back/routes/post';\n\nconst {\n  TextArea\n} = Input;\n\nconst CommentList = ({\n  comments\n}) => __jsx(List, {\n  dataSource: comments,\n  header: `${comments.length}개의 답변`,\n  itemLayout: \"horizontal\",\n  renderItem: props => __jsx(Comment, props),\n  style: {\n    maxHeight: '250px',\n    overflow: 'auto',\n    height: '50vh'\n  }\n}); // const onSubmitComment = useCallback(() => {\n//   dispatch({\n//     type: ADD_COMMENT_REQUEST,\n//     data: { content: value, postId: props.postId, userId: me.id },\n//   });\n// }, [content, id]);\n\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => __jsx(Form, null, __jsx(Form.Item, null, __jsx(TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value\n})), __jsx(Form.Item, null, __jsx(Button, {\n  htmlType: \"submit\",\n  loading: submitting,\n  onClick: onSubmit,\n  type: \"primary\"\n}, \"\\uB313\\uAE00\")));\n\nfunction Reply() {\n  const {\n    0: comments,\n    1: setComments\n  } = useState([]);\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    if (!value) {\n      return;\n    }\n\n    setSubmitting(true);\n    setTimeout(() => {\n      setSubmitting(false);\n      setValue('');\n      setComments([...comments, {\n        author: me.nickname,\n        avatar: logo,\n        content: __jsx(\"p\", null, value),\n        datetime: moment().fromNow()\n      }]);\n    }, 500);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return __jsx(\"div\", {\n    o: true\n  }, __jsx(\"br\", null), comments.length > 0 && __jsx(CommentList, {\n    comments: comments\n  }), __jsx(Comment, {\n    avatar: __jsx(Avatar, {\n      src: logo,\n      alt: \"logo\"\n    }),\n    content: __jsx(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value\n    })\n  }));\n}\n\nexport default Reply;","map":null,"metadata":{},"sourceType":"module"}